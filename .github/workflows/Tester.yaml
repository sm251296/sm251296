# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Tester

on:
  workflow_dispatch

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./QaAutomation/package-lock.json
      
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d_%H%M%S')"
        
    - name: Install dependencies
      run: |
        cd $GITHUB_WORKSPACE
        cd QaAutomation
        npm install
        npm install newman
        npm install balanced-match
        npm install newman-reporter-allure
        npm install newman-reporter-html
        npm install newman-reporter-htmlextra
        npm install newman-reporter-json-summary
        npm install request
        npm install request-promise
        npm audit fix
        
    - name: Running NydigProvider-APIs
      run: |
        cd QaAutomation
        mkdir newman        
        node "./newman-run.js" "./NydigProvider-MarketData.postman_collection.json" "./NCR.postman_globals.json" "./NydigProvider_Dev.postman_environment.json"   
   
    - name: Read package.json
      id: package
      uses: juliangruber/read-file-action@v1
      with:
        path: ${{ github.workspace }}/QaAutomation/newman/Result.json
        
    - name: Echo Results.json
      id: test-results
      run: |
        echo "::set-output name=testResultsJson::${{ steps.package.outputs.content }}"
        echo "${{ steps.package.outputs.content }}"        
    
    - name: debugger
      id: test-debugger
      run: echo ${{ steps.test-results.outputs.testResultsJson }}
      
    - name: Read JsonFile
      id: data
      uses: gr2m/get-json-paths-action@v1.x
      with:
        json: ${{ steps.test-results.outputs.testResultsJson }}
        #bar: "Run.Stats.Assertions.failed"
    - run: "echo bar is ${{ steps.test-results.outputs.testResultsJson.Run.Stats }}"
    
    - name: TestResults Check
      if: ${{steps.package.outputs.content.Run.Stats.Assertions.failed}} > 0
      uses: actions/github-script@v3
      with:
        script: |
          core.setFailed('Some tests failed')
