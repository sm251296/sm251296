{
	"info": {
		"_postman_id": "04aaf60b-6613-44c7-a170-9ca3ee66fb11",
		"name": "CurrencyProvider",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "MarketData",
			"item": [
				{
					"name": "GetTicker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"symbol\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"currency\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"price\": {\r",
									"      \"type\": \"integer\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"symbol\",\r",
									"    \"currency\",\r",
									"    \"price\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Market Ticker GET - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Market Ticker GET\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpUsersBaseUrl}}/ticker/{{symbolBTC}}?toCurrency={{toCurrency}}",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"ticker",
								"{{symbolBTC}}"
							],
							"query": [
								{
									"key": "toCurrency",
									"value": "{{toCurrency}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTicker_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Market Ticker GET - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Market Ticker GET - 400\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{cpMarketDataBaseUrl}}/ticker/{{symbolBTC}}?toCurrency={{toCurrency}}",
							"host": [
								"{{cpMarketDataBaseUrl}}"
							],
							"path": [
								"ticker",
								"{{symbolBTC}}"
							],
							"query": [
								{
									"key": "toCurrency",
									"value": "{{toCurrency}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTicker_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Market Ticker GET - 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Market Ticker GET - 401\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpMarketDataBaseUrl}}/ticker/{{symbolBTC}}?toCurrency={{toCurrency}}",
							"host": [
								"{{cpMarketDataBaseUrl}}"
							],
							"path": [
								"ticker",
								"{{symbolBTC}}"
							],
							"query": [
								{
									"key": "toCurrency",
									"value": "{{toCurrency}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTicker_403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Market Ticker GET - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Market Ticker GET - 403\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpMarketDataBaseUrl}}/ticker/{{symbolBTC}}?toCurrency={{toCurrency}}",
							"host": [
								"{{cpMarketDataBaseUrl}}"
							],
							"path": [
								"ticker",
								"{{symbolBTC}}"
							],
							"query": [
								{
									"key": "toCurrency",
									"value": "{{toCurrency}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTicker_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Market Ticker GET - 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Market Ticker GET - 404\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpMarketDataBaseUrl}}/ticker/{{symbolBTC}}?toCurrency={{toCurrency}}",
							"host": [
								"{{cpMarketDataBaseUrl}}"
							],
							"path": [
								"ticker",
								"{{symbolBTC}}"
							],
							"query": [
								{
									"key": "toCurrency",
									"value": "{{toCurrency}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTicker_409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Market Ticker GET - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Market Ticker GET - 409\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpMarketDataBaseUrl}}/ticker/{{symbolBTC}}?toCurrency={{toCurrency}}",
							"host": [
								"{{cpMarketDataBaseUrl}}"
							],
							"path": [
								"ticker",
								"{{symbolBTC}}"
							],
							"query": [
								{
									"key": "toCurrency",
									"value": "{{toCurrency}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTicker_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Market Ticker GET - 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Market Ticker GET - 500\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpMarketDataBaseUrl}}/ticker/{{symbolBTC}}?toCurrency={{toCurrency}}",
							"host": [
								"{{cpMarketDataBaseUrl}}"
							],
							"path": [
								"ticker",
								"{{symbolBTC}}"
							],
							"query": [
								{
									"key": "toCurrency",
									"value": "{{toCurrency}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTickerHistory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
									"    \"$ref\": \"#/definitions/Welcome9\",\r",
									"    \"definitions\": {\r",
									"        \"Welcome9\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"symbol\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"currency\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"data\": {\r",
									"                    \"type\": \"array\",\r",
									"                    \"items\": {\r",
									"                        \"$ref\": \"#/definitions/Datum\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"currency\",\r",
									"                \"data\",\r",
									"                \"symbol\"\r",
									"            ],\r",
									"            \"title\": \"Welcome9\"\r",
									"        },\r",
									"        \"Datum\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"price\": {\r",
									"                    \"type\": \"number\"\r",
									"                },\r",
									"                \"timestamp\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"price\",\r",
									"                \"timestamp\"\r",
									"            ],\r",
									"            \"title\": \"Datum\"\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Market Ticker History GET - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Market Ticker History GET - 200\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpMarketDataBaseUrl}}/ticker/{{symbolBTC}}/history?frequency={{frequency}}&lookback={{lookback}}&toCurrency={{toCurrency}}",
							"host": [
								"{{cpMarketDataBaseUrl}}"
							],
							"path": [
								"ticker",
								"{{symbolBTC}}",
								"history"
							],
							"query": [
								{
									"key": "frequency",
									"value": "{{frequency}}"
								},
								{
									"key": "lookback",
									"value": "{{lookback}}"
								},
								{
									"key": "toCurrency",
									"value": "{{toCurrency}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTickerHistory_400",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Market Ticker History GET - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Market Ticker History GET - 400\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{cpMarketDataBaseUrl}}/ticker/{{symbolBTC}}/history?frequency={{frequency}}&lookback={{lookback}}&toCurrency={{toCurrency}}",
							"host": [
								"{{cpMarketDataBaseUrl}}"
							],
							"path": [
								"ticker",
								"{{symbolBTC}}",
								"history"
							],
							"query": [
								{
									"key": "frequency",
									"value": "{{frequency}}"
								},
								{
									"key": "lookback",
									"value": "{{lookback}}"
								},
								{
									"key": "toCurrency",
									"value": "{{toCurrency}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTickerHistory_401",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Market Ticker History GET - 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Market Ticker History GET - 401 \", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpMarketDataBaseUrl}}/ticker/{{symbolBTC}}/history?frequency={{frequency}}&lookback={{lookback}}&toCurrency={{toCurrency}}",
							"host": [
								"{{cpMarketDataBaseUrl}}"
							],
							"path": [
								"ticker",
								"{{symbolBTC}}",
								"history"
							],
							"query": [
								{
									"key": "frequency",
									"value": "{{frequency}}"
								},
								{
									"key": "lookback",
									"value": "{{lookback}}"
								},
								{
									"key": "toCurrency",
									"value": "{{toCurrency}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTickerHistory_403",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Market Ticker History GET - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Market Ticker History GET - 403\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpMarketDataBaseUrl}}/ticker/{{symbolBTC}}/history?frequency={{frequency}}&lookback={{lookback}}&toCurrency={{toCurrency}}",
							"host": [
								"{{cpMarketDataBaseUrl}}"
							],
							"path": [
								"ticker",
								"{{symbolBTC}}",
								"history"
							],
							"query": [
								{
									"key": "frequency",
									"value": "{{frequency}}"
								},
								{
									"key": "lookback",
									"value": "{{lookback}}"
								},
								{
									"key": "toCurrency",
									"value": "{{toCurrency}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTickerHistory_404",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Market Ticker History GET - 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Market Ticker History GET - 404\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpMarketDataBaseUrl}}/ticker/{{symbolBTC}}/history?frequency={{frequency}}&lookback={{lookback}}&toCurrency={{toCurrency}}",
							"host": [
								"{{cpMarketDataBaseUrl}}"
							],
							"path": [
								"ticker",
								"{{symbolBTC}}",
								"history"
							],
							"query": [
								{
									"key": "frequency",
									"value": "{{frequency}}"
								},
								{
									"key": "lookback",
									"value": "{{lookback}}"
								},
								{
									"key": "toCurrency",
									"value": "{{toCurrency}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTickerHistory_409",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Market Ticker History GET - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Market Ticker History GET - 409\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpMarketDataBaseUrl}}/ticker/{{symbolBTC}}/history?frequency={{frequency}}&lookback={{lookback}}&toCurrency={{toCurrency}}",
							"host": [
								"{{cpMarketDataBaseUrl}}"
							],
							"path": [
								"ticker",
								"{{symbolBTC}}",
								"history"
							],
							"query": [
								{
									"key": "frequency",
									"value": "{{frequency}}"
								},
								{
									"key": "lookback",
									"value": "{{lookback}}"
								},
								{
									"key": "toCurrency",
									"value": "{{toCurrency}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTickerHistory_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Market Ticker History - 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Market Ticker History GET - 500\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpMarketDataBaseUrl}}/ticker/{{symbolBTC}}/history?frequency={{frequency}}&lookback={{lookback}}&toCurrency={{toCurrency}}",
							"host": [
								"{{cpMarketDataBaseUrl}}"
							],
							"path": [
								"ticker",
								"{{symbolBTC}}",
								"history"
							],
							"query": [
								{
									"key": "frequency",
									"value": "{{frequency}}"
								},
								{
									"key": "lookback",
									"value": "{{lookback}}"
								},
								{
									"key": "toCurrency",
									"value": "{{toCurrency}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "PostUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
									"    \"$ref\": \"#/definitions/Welcome2\",\r",
									"    \"definitions\": {\r",
									"        \"Welcome2\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"uuid\"\r",
									"                },\r",
									"                \"created\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                },\r",
									"                \"legalName\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"preferredName\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"taxWithholding\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                },\r",
									"                \"address\": {\r",
									"                    \"$ref\": \"#/definitions/Address\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"address\",\r",
									"                \"created\",\r",
									"                \"id\",\r",
									"                \"legalName\",\r",
									"                \"preferredName\",\r",
									"                \"taxWithholding\"\r",
									"            ],\r",
									"            \"title\": \"Welcome2\"\r",
									"        },\r",
									"        \"Address\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"line1\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"city\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"stateProvinceRegion\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"zipCode\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"integer\"\r",
									"                },\r",
									"                \"country\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"email\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"phone\": {\r",
									"                    \"type\": \"string\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"city\",\r",
									"                \"country\",\r",
									"                \"email\",\r",
									"                \"line1\",\r",
									"                \"phone\",\r",
									"                \"stateProvinceRegion\",\r",
									"                \"zipCode\"\r",
									"            ],\r",
									"            \"title\": \"Address\"\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users POST - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users POST - 201\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"institutionUserId\": \"1234567890\",\r\n    \"legalName\": \"Jonâthan Edwörd Sçott Odínson\",\r\n    \"preferredName\": \"Jon\",\r\n    \"taxWithholding\": false,\r\n    \"address\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\"     \r\n    },\r\n    \"email\": \"jon-odin+35@example.com\",\r\n    \"phone\": \"+19049055000\"\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostUsers_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users POST - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users POST - 400\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"institutionUser\": \"123456789\",\r\n    \"legalName\": \"Jonâthan Edwörd Sçott Odínson\",\r\n    \"preferredName\": \"Jon\",\r\n    \"taxWithholding\": false,\r\n    \"address\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostUsers_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users POST - 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users POST - 401\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"institutionUserId\": \"123456789\",\r\n    \"legalName\": \"Jonâthan Edwörd Sçott Odínson\",\r\n    \"preferredName\": \"Jon\",\r\n    \"taxWithholding\": false,\r\n    \"address\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostUsers_403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users POST - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users POST - 403\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"institutionUserId\": \"123456789\",\r\n    \"legalName\": \"Jonâthan Edwörd Sçott Odínson\",\r\n    \"preferredName\": \"Jon\",\r\n    \"taxWithholding\": false,\r\n    \"address\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostUsers_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users POST - 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users POST - 404\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"institutionUserId\": \"123456789\",\r\n    \"legalName\": \"Jonâthan Edwörd Sçott Odínson\",\r\n    \"preferredName\": \"Jon\",\r\n    \"taxWithholding\": false,\r\n    \"address\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostUsers_409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users POST - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users POST - 409\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"institutionUserId\": \"123456789\",\r\n    \"legalName\": \"Jonâthan Edwörd Sçott Odínson\",\r\n    \"preferredName\": \"Jon\",\r\n    \"taxWithholding\": false,\r\n    \"address\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostUsers_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users POST - 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users POST - 500\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"institutionUserId\": \"123456789\",\r\n    \"legalName\": \"Jonâthan Edwörd Sçott Odínson\",\r\n    \"preferredName\": \"Jon\",\r\n    \"taxWithholding\": false,\r\n    \"address\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
									"    \"$ref\": \"#/definitions/Welcome2\",\r",
									"    \"definitions\": {\r",
									"        \"Welcome2\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"uuid\"\r",
									"                },\r",
									"                \"created\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                },\r",
									"                \"legalName\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"preferredName\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"taxWithholding\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                },\r",
									"                \"address\": {\r",
									"                    \"$ref\": \"#/definitions/Address\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"address\",\r",
									"                \"created\",\r",
									"                \"id\",\r",
									"                \"legalName\",\r",
									"                \"preferredName\",\r",
									"                \"taxWithholding\"\r",
									"            ],\r",
									"            \"title\": \"Welcome2\"\r",
									"        },\r",
									"        \"Address\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"line1\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"city\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"stateProvinceRegion\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"zipCode\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"integer\"\r",
									"                },\r",
									"                \"country\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"email\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"phone\": {\r",
									"                    \"type\": \"string\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"city\",\r",
									"                \"country\",\r",
									"                \"email\",\r",
									"                \"line1\",\r",
									"                \"phone\",\r",
									"                \"stateProvinceRegion\",\r",
									"                \"zipCode\"\r",
									"            ],\r",
									"            \"title\": \"Address\"\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users GET - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users GET - 200\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "X-NYDIG-TENANT-ID",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users/{{userId}}",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUsers_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users GET - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users GET - 400\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users/1{{userId}}",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users",
								"1{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUsers_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users GET - 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users GET - 401\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users/{{userId}}",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUsers_403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users GET - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users GET - 403\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users/{{userId}}",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUsers_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users GET - 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users GET - 404\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users/{{userId}}/7",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUsers_409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users GET - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users GET - 409\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users/{{userId}}",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUsers_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users GET - 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users GET - 500\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users/{{userId}}",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users PUT - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"institutionUserId\": \"1234567890\",\r\n    \"legalName\": \"Jonâthan Edwörd Sçott Odínson\",\r\n    \"preferredName\": \"Jon\",\r\n    \"taxWithholding\": true,\r\n    \"address\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\"     \r\n    },\r\n    \"email\": \"jon-odin+35@example.com\",\r\n    \"phone\": \"+19049055000\"\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users/cu-01fjccydfj4sks9nhg747srm3a",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users",
								"cu-01fjccydfj4sks9nhg747srm3a"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutUser_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users PUT - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users PUT - 400\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"institutionUserId\": \"123456789\",\r\n    \"legalName\": \"Jonâthan Edwörd Sçott Odínson\",\r\n    \"preferredName\": \"Jon\",\r\n    \"taxWithholding\": false,\r\n    \"address\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users/{{putUserId}}",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users",
								"{{putUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutUser_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users PUT - 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users PUT - 401\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"institutionUserId\": \"123456789\",\r\n    \"legalName\": \"Jonâthan Edwörd Sçott Odínson\",\r\n    \"preferredName\": \"Jon\",\r\n    \"taxWithholding\": false,\r\n    \"address\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users/{{putUserId}}",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users",
								"{{putUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutUser_403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users PUT - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users PUT - 403\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"institutionUserId\": \"123456789\",\r\n    \"legalName\": \"Jonâthan Edwörd Sçott Odínson\",\r\n    \"preferredName\": \"Jon\",\r\n    \"taxWithholding\": false,\r\n    \"address\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users/{{putUserId}}",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users",
								"{{putUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutUser_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users PUT - 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users PUT - 404\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"institutionUserId\": \"123456789\",\r\n    \"legalName\": \"Jonâthan Edwörd Sçott Odínson\",\r\n    \"preferredName\": \"Jon\",\r\n    \"taxWithholding\": false,\r\n    \"address\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users/nep/{{putUserId}}",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users",
								"nep",
								"{{putUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutUser_409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users PUT - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users PUT - 409\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"institutionUserId\": \"123456789\",\r\n    \"legalName\": \"Jonâthan Edwörd Sçott Odínson\",\r\n    \"preferredName\": \"Jon\",\r\n    \"taxWithholding\": false,\r\n    \"address\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users/{{putUserId}}",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users",
								"{{putUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutUser_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Users PUT - 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Users PUT - 500\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"institutionUserId\": \"123456789\",\r\n    \"legalName\": \"Jonâthan Edwörd Sçott Odínson\",\r\n    \"preferredName\": \"Jon\",\r\n    \"taxWithholding\": false,\r\n    \"address\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/users/{{putUserId}}",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"users",
								"{{putUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostEligibility",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
									"    \"$ref\": \"#/definitions/Welcome4\",\r",
									"    \"definitions\": {\r",
									"        \"Welcome4\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"eligible\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"eligible\"\r",
									"            ],\r",
									"            \"title\": \"Welcome4\"\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Eligibility POST - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Eligibility POST - 200\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dob\": \"1985-01-01\",\r\n    \"stateProvinceRegion\": \"IL\"\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/eligibility",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"eligibility"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostEligibility_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Eligibility POST - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Eligibility POST - 400\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dob\": \"1985-01-01\",\r\n    \"stateProvinceRegion\": \"IL\"\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/eligibility",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"eligibility"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostEligibility_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Eligibility POST - 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Eligibility POST - 401\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST_401",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dob\": \"1985-01-01\",\r\n    \"stateProvinceRegion\": \"IL\"\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/eligibility",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"eligibility"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostEligibility_403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Eligibility POST - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Eligibility POST - 403\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dob\": \"1985-01-01\",\r\n    \"stateProvinceRegion\": \"IL\"\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/eligibility",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"eligibility"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostEligibility_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Eligibility POST - 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Eligibility POST - 404\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dob\": \"1985-01-01\",\r\n    \"stateProvinceRegion\": \"IL\"\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/eligibility",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"eligibility"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostEligibility_409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Eligibility POST - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Eligibility POST - 409\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dob\": \"1985-01-01\",\r\n    \"stateProvinceRegion\": \"IL\"\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/eligibility",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"eligibility"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostEligibility_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Eligibility POST - 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Eligibility POST - 500\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dob\": \"1985-01-01\",\r\n    \"stateProvinceRegion\": \"IL\"\r\n}"
						},
						"url": {
							"raw": "{{cpUsersBaseUrl}}/eligibility",
							"host": [
								"{{cpUsersBaseUrl}}"
							],
							"path": [
								"eligibility"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Accounts",
			"item": [
				{
					"name": "PostAccount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
									"    \"$ref\": \"#/definitions/Welcome1\",\r",
									"    \"definitions\": {\r",
									"        \"Welcome1\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"created\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                },\r",
									"                \"owners\": {\r",
									"                    \"type\": \"array\",\r",
									"                    \"items\": {\r",
									"                        \"$ref\": \"#/definitions/Owner\"\r",
									"                    }\r",
									"                },\r",
									"                \"status\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"balance\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"assetSymbol\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"assetName\": {\r",
									"                    \"type\": \"string\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"assetName\",\r",
									"                \"assetSymbol\",\r",
									"                \"balance\",\r",
									"                \"created\",\r",
									"                \"id\",\r",
									"                \"owners\",\r",
									"                \"status\"\r",
									"            ],\r",
									"            \"title\": \"Welcome1\"\r",
									"        },\r",
									"        \"Owner\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"userId\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"primary\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"primary\",\r",
									"                \"userId\"\r",
									"            ],\r",
									"            \"title\": \"Owner\"\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts POST - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts POST - 201\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"owners\": [\r\n        {\r\n            \"userId\": \"8afd3b57-80e9-46a2-b5ed-35df64e7bee5\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostAccount_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts POST - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts POST - 400\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"owners\": [\r\n        {\r\n            \"userId\": \"8afd3b57-80e9-46a2-b5ed-35df64e7bee5\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostAccount_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts POST - 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts POST - 401\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"owners\": [\r\n        {\r\n            \"userId\": \"8afd3b57-80e9-46a2-b5ed-35df64e7bee5\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostAccount_403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts POST - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts POST - 403\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"owners\": [\r\n        {\r\n            \"userId\": \"8afd3b57-80e9-46a2-b5ed-35df64e7bee5\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostAccount_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts POST - 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts POST - 404\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"owners\": [\r\n        {\r\n            \"userId\": \"8afd3b57-80e9-46a2-b5ed-35df64e7bee5\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostAccount_409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts POST - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts POST - 409\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"owners\": [\r\n        {\r\n            \"userId\": \"8afd3b57-80e9-46a2-b5ed-35df64e7bee5\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostAccount_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts POST - 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts POST - 500\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"owners\": [\r\n        {\r\n            \"userId\": \"8afd3b57-80e9-46a2-b5ed-35df64e7bee5\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
									"    \"$ref\": \"#/definitions/Welcome4\",\r",
									"    \"definitions\": {\r",
									"        \"Welcome4\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"results\": {\r",
									"                    \"type\": \"array\",\r",
									"                    \"items\": {\r",
									"                        \"$ref\": \"#/definitions/Result\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"results\"\r",
									"            ],\r",
									"            \"title\": \"Welcome4\"\r",
									"        },\r",
									"        \"Result\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"created\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                },\r",
									"                \"owners\": {\r",
									"                    \"type\": \"array\",\r",
									"                    \"items\": {\r",
									"                        \"$ref\": \"#/definitions/Owner\"\r",
									"                    }\r",
									"                },\r",
									"                \"status\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"balance\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"assetSymbol\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"assetName\": {\r",
									"                    \"type\": \"string\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"assetName\",\r",
									"                \"assetSymbol\",\r",
									"                \"balance\",\r",
									"                \"created\",\r",
									"                \"id\",\r",
									"                \"owners\",\r",
									"                \"status\"\r",
									"            ],\r",
									"            \"title\": \"Result\"\r",
									"        },\r",
									"        \"Owner\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"userId\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"primary\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"primary\",\r",
									"                \"userId\"\r",
									"            ],\r",
									"            \"title\": \"Owner\"\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts GET - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts GET - 200\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts?providerId={{providerId}}&userId={{accountsUserId}}&offset={{offset}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "providerId",
									"value": "{{providerId}}"
								},
								{
									"key": "userId",
									"value": "{{accountsUserId}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccounts_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts GET - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts GET - 400\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts?providerId={{providerId}}&userId={{accountsUserId}}&offset={{offset}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "providerId",
									"value": "{{providerId}}"
								},
								{
									"key": "userId",
									"value": "{{accountsUserId}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccounts_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts GET - 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts GET - 401\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts?providerId={{providerId}}&userId={{accountsUserId}}&offset={{offset}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "providerId",
									"value": "{{providerId}}"
								},
								{
									"key": "userId",
									"value": "{{accountsUserId}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccounts_403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts GET - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts GET - 403\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts?providerId={{providerId}}&userId={{accountsUserId}}&offset={{offset}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "providerId",
									"value": "{{providerId}}"
								},
								{
									"key": "userId",
									"value": "{{accountsUserId}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccounts_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts GET - 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts GET - 404\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts?providerId={{providerId}}&userId={{accountsUserId}}&offset={{offset}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "providerId",
									"value": "{{providerId}}"
								},
								{
									"key": "userId",
									"value": "{{accountsUserId}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccounts_409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts GET - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts GET - 409\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts?providerId={{providerId}}&userId={{accountsUserId}}&offset={{offset}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "providerId",
									"value": "{{providerId}}"
								},
								{
									"key": "userId",
									"value": "{{accountsUserId}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccounts_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts GET - 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts GET - 500\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts?providerId={{providerId}}&userId={{accountsUserId}}&offset={{offset}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "providerId",
									"value": "{{providerId}}"
								},
								{
									"key": "userId",
									"value": "{{accountsUserId}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
									"    \"$ref\": \"#/definitions/Welcome4\",\r",
									"    \"definitions\": {\r",
									"        \"Welcome4\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"created\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                },\r",
									"                \"owners\": {\r",
									"                    \"type\": \"array\",\r",
									"                    \"items\": {\r",
									"                        \"$ref\": \"#/definitions/Owner\"\r",
									"                    }\r",
									"                },\r",
									"                \"status\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"balance\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"assetSymbol\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"assetName\": {\r",
									"                    \"type\": \"string\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"assetName\",\r",
									"                \"assetSymbol\",\r",
									"                \"balance\",\r",
									"                \"created\",\r",
									"                \"id\",\r",
									"                \"owners\",\r",
									"                \"status\"\r",
									"            ],\r",
									"            \"title\": \"Welcome4\"\r",
									"        },\r",
									"        \"Owner\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"userId\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"primary\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"primary\",\r",
									"                \"userId\"\r",
									"            ],\r",
									"            \"title\": \"Owner\"\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Account GET - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Account GET - 200\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts/{{accountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccount_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Account GET - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Account GET - 400\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts/{{accountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccount_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Account GET - 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Account GET - 401\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts/{{accountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccount_403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Account GET - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Account GET - 403\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts/{{accountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccount_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Account GET - 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Account GET - 404\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts/{{accountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccount_409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Account GET - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Account GET - 409\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts/{{accountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccount_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Account GET - 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Account GET - 500\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts/{{accountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutAccounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts PUT - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts PUT - 200\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"829553c1cca04fa081529ad9194da788\",\r\n    \"created\": \"2021-06-08T18:08:44Z\",\r\n    \"owners\": [\r\n        {\r\n            \"userId\": \"bc58352026824e85b80c369e7db091ab\",\r\n            \"primary\": true\r\n        }\r\n    ],\r\n    \"status\": \"open\",\r\n    \"balance\": \"0.12345678\",\r\n    \"assetSymbol\": \"btc\",\r\n    \"assetName\": \"Bitcoin\"\r\n}"
						},
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts/{{putAccountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts",
								"{{putAccountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutAccounts_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts PUT - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts PUT - 400\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"829553c1cca04fa081529ad9194da788\",\r\n    \"created\": \"2021-06-08T18:08:44Z\",\r\n    \"owners\": [\r\n        {\r\n            \"userId\": \"bc58352026824e85b80c369e7db091ab\",\r\n            \"primary\": true\r\n        }\r\n    ],\r\n    \"status\": \"open\",\r\n    \"balance\": \"0.12345678\",\r\n    \"assetSymbol\": \"btc\",\r\n    \"assetName\": \"Bitcoin\"\r\n}"
						},
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts/{{putAccountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts",
								"{{putAccountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutAccounts_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts PUT - 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts PUT - 401\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"829553c1cca04fa081529ad9194da788\",\r\n    \"created\": \"2021-06-08T18:08:44Z\",\r\n    \"owners\": [\r\n        {\r\n            \"userId\": \"bc58352026824e85b80c369e7db091ab\",\r\n            \"primary\": true\r\n        }\r\n    ],\r\n    \"status\": \"open\",\r\n    \"balance\": \"0.12345678\",\r\n    \"assetSymbol\": \"btc\",\r\n    \"assetName\": \"Bitcoin\"\r\n}"
						},
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts/{{putAccountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts",
								"{{putAccountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutAccounts_403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts PUT - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts PUT - 403\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"829553c1cca04fa081529ad9194da788\",\r\n    \"created\": \"2021-06-08T18:08:44Z\",\r\n    \"owners\": [\r\n        {\r\n            \"userId\": \"bc58352026824e85b80c369e7db091ab\",\r\n            \"primary\": true\r\n        }\r\n    ],\r\n    \"status\": \"open\",\r\n    \"balance\": \"0.12345678\",\r\n    \"assetSymbol\": \"btc\",\r\n    \"assetName\": \"Bitcoin\"\r\n}"
						},
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts/{{putAccountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts",
								"{{putAccountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutAccounts_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts PUT - 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts PUT - 404\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"829553c1cca04fa081529ad9194da788\",\r\n    \"created\": \"2021-06-08T18:08:44Z\",\r\n    \"owners\": [\r\n        {\r\n            \"userId\": \"bc58352026824e85b80c369e7db091ab\",\r\n            \"primary\": true\r\n        }\r\n    ],\r\n    \"status\": \"open\",\r\n    \"balance\": \"0.12345678\",\r\n    \"assetSymbol\": \"btc\",\r\n    \"assetName\": \"Bitcoin\"\r\n}"
						},
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts/{{putAccountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts",
								"{{putAccountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutAccounts_409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts PUT - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts PUT - 409\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"829553c1cca04fa081529ad9194da788\",\r\n    \"created\": \"2021-06-08T18:08:44Z\",\r\n    \"owners\": [\r\n        {\r\n            \"userId\": \"bc58352026824e85b80c369e7db091ab\",\r\n            \"primary\": true\r\n        }\r\n    ],\r\n    \"status\": \"open\",\r\n    \"balance\": \"0.12345678\",\r\n    \"assetSymbol\": \"btc\",\r\n    \"assetName\": \"Bitcoin\"\r\n}"
						},
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts/{{putAccountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts",
								"{{putAccountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutAccounts_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts PUT - 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts PUT - 500\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"829553c1cca04fa081529ad9194da788\",\r\n    \"created\": \"2021-06-08T18:08:44Z\",\r\n    \"owners\": [\r\n        {\r\n            \"userId\": \"bc58352026824e85b80c369e7db091ab\",\r\n            \"primary\": true\r\n        }\r\n    ],\r\n    \"status\": \"open\",\r\n    \"balance\": \"0.12345678\",\r\n    \"assetSymbol\": \"btc\",\r\n    \"assetName\": \"Bitcoin\"\r\n}"
						},
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/accounts/{{putAccountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"accounts",
								"{{putAccountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccountsRestrictions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
									"    \"$ref\": \"#/definitions/Welcome2\",\r",
									"    \"definitions\": {\r",
									"        \"Welcome2\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"results\": {\r",
									"                    \"type\": \"array\",\r",
									"                    \"items\": {\r",
									"                        \"$ref\": \"#/definitions/Result\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"results\"\r",
									"            ],\r",
									"            \"title\": \"Welcome2\"\r",
									"        },\r",
									"        \"Result\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"status\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"activity\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"reason\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"createdAt\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                },\r",
									"                \"releasedAt\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"activity\",\r",
									"                \"createdAt\",\r",
									"                \"reason\",\r",
									"                \"releasedAt\",\r",
									"                \"status\"\r",
									"            ],\r",
									"            \"title\": \"Result\"\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts Restrictions GET - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts Restrictions GET - 200\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/restrictions/{{restrictionsAccountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"restrictions",
								"{{restrictionsAccountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccountsRestrictions_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts Restrictions GET - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts Restrictions GET - 400\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/restrictions/{{restrictionsAccountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"restrictions",
								"{{restrictionsAccountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccountsRestrictions_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts Restrictions GET - 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts Restrictions GET - 401\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/restrictions/{{restrictionsAccountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"restrictions",
								"{{restrictionsAccountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccountsRestrictions_403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts Restrictions GET - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts Restrictions GET - 403\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/restrictions/{{restrictionsAccountId}}cpAccountsBaseUrl",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"restrictions",
								"{{restrictionsAccountId}}cpAccountsBaseUrl"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccountsRestrictions_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts Restrictions GET - 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts Restrictions GET - 404\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/restrictions/{{restrictionsAccountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"restrictions",
								"{{restrictionsAccountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccountsRestrictions_409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts Restrictions GET - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts Restrictions GET - 409\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/restrictions/{{restrictionsAccountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"restrictions",
								"{{restrictionsAccountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccountsRestrictions_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Accounts Restrictions GET - 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Accounts Restrictions GET - 500\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpAccountsBaseUrl}}/restrictions/{{restrictionsAccountId}}",
							"host": [
								"{{cpAccountsBaseUrl}}"
							],
							"path": [
								"restrictions",
								"{{restrictionsAccountId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "PostOrders_Buy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
									"    \"$ref\": \"#/definitions/Welcome5\",\r",
									"    \"definitions\": {\r",
									"        \"Welcome5\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"accountId\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"userId\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"uuid\"\r",
									"                },\r",
									"                \"created\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                },\r",
									"                \"expiration\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                },\r",
									"                \"status\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"symbol\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"side\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"quantity\": {\r",
									"                    \"type\": \"number\"\r",
									"                },\r",
									"                \"price\": {\r",
									"                    \"type\": \"number\"\r",
									"                },\r",
									"                \"receipt\": {\r",
									"                    \"$ref\": \"#/definitions/Receipt\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"accountId\",\r",
									"                \"created\",\r",
									"                \"expiration\",\r",
									"                \"id\",\r",
									"                \"price\",\r",
									"                \"quantity\",\r",
									"                \"receipt\",\r",
									"                \"side\",\r",
									"                \"status\",\r",
									"                \"symbol\",\r",
									"                \"userId\"\r",
									"            ],\r",
									"            \"title\": \"Welcome5\"\r",
									"        },\r",
									"        \"Receipt\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"subtotal\": {\r",
									"                    \"type\": \"number\"\r",
									"                },\r",
									"                \"fee\": {\r",
									"                    \"type\": \"number\"\r",
									"                },\r",
									"                \"total\": {\r",
									"                    \"type\": \"number\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"fee\",\r",
									"                \"subtotal\",\r",
									"                \"total\"\r",
									"            ],\r",
									"            \"title\": \"Receipt\"\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders POST - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders POST - 201\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountId\": \"829553c1cca04fa081529ad9194da788\",\r\n    \"userId\": \"6a8e01a8-37f0-40e7-bb4e-2b47f1b2745e\",\r\n    \"side\": \"sell\",\r\n    \"symbol\": \"btc\",\r\n    \"quantity\": 1000\r\n}"
						},
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOrders_Sell",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders POST - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders POST - 201\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountId\": \"829553c1cca04fa081529ad9194da788\",\r\n    \"userId\": \"6a8e01a8-37f0-40e7-bb4e-2b47f1b2745e\",\r\n    \"side\": \"buy\",\r\n    \"symbol\": \"btc\",\r\n    \"quantity\": 1000\r\n}"
						},
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOrders_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders POST - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders POST - 400\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountId\": \"829553c1cca04fa081529ad9194da788\",\r\n    \"userId\": \"6a8e01a8-37f0-40e7-bb4e-2b47f1b2745e\",\r\n    \"side\": \"buy\",\r\n    \"symbol\": \"btc\",\r\n    \"quantity\": 1000\r\n}"
						},
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOrders_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders POST - 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders POST - 401\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountId\": \"829553c1cca04fa081529ad9194da788\",\r\n    \"userId\": \"6a8e01a8-37f0-40e7-bb4e-2b47f1b2745e\",\r\n    \"side\": \"buy\",\r\n    \"symbol\": \"btc\",\r\n    \"quantity\": 1000\r\n}"
						},
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOrders_403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders POST - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders POST - 403\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountId\": \"829553c1cca04fa081529ad9194da788\",\r\n    \"userId\": \"6a8e01a8-37f0-40e7-bb4e-2b47f1b2745e\",\r\n    \"side\": \"buy\",\r\n    \"symbol\": \"btc\",\r\n    \"quantity\": 1000\r\n}"
						},
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOrders_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders POST - 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders POST - 404\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountId\": \"829553c1cca04fa081529ad9194da788\",\r\n    \"userId\": \"6a8e01a8-37f0-40e7-bb4e-2b47f1b2745e\",\r\n    \"side\": \"buy\",\r\n    \"symbol\": \"btc\",\r\n    \"quantity\": 1000\r\n}"
						},
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOrders_409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders POST - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders POST - 409\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountId\": \"829553c1cca04fa081529ad9194da788\",\r\n    \"userId\": \"6a8e01a8-37f0-40e7-bb4e-2b47f1b2745e\",\r\n    \"side\": \"buy\",\r\n    \"symbol\": \"btc\",\r\n    \"quantity\": 1000\r\n}"
						},
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOrders_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders POST - 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders POST - 500\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountId\": \"829553c1cca04fa081529ad9194da788\",\r\n    \"userId\": \"6a8e01a8-37f0-40e7-bb4e-2b47f1b2745e\",\r\n    \"side\": \"buy\",\r\n    \"symbol\": \"btc\",\r\n    \"quantity\": 1000\r\n}"
						},
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOrders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
									"    \"$ref\": \"#/definitions/Welcome8\",\r",
									"    \"definitions\": {\r",
									"        \"Welcome8\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"results\": {\r",
									"                    \"type\": \"array\",\r",
									"                    \"items\": {\r",
									"                        \"$ref\": \"#/definitions/Result\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"results\"\r",
									"            ],\r",
									"            \"title\": \"Welcome8\"\r",
									"        },\r",
									"        \"Result\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"accountId\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"userId\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"uuid\"\r",
									"                },\r",
									"                \"created\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                },\r",
									"                \"expiration\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                },\r",
									"                \"status\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"symbol\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"side\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"quantity\": {\r",
									"                    \"type\": \"number\"\r",
									"                },\r",
									"                \"price\": {\r",
									"                    \"type\": \"number\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"accountId\",\r",
									"                \"created\",\r",
									"                \"expiration\",\r",
									"                \"id\",\r",
									"                \"price\",\r",
									"                \"quantity\",\r",
									"                \"side\",\r",
									"                \"status\",\r",
									"                \"symbol\",\r",
									"                \"userId\"\r",
									"            ],\r",
									"            \"title\": \"Result\"\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders GET - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders GET - 200\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders?accountId={{ordersAccountId}}&status={{ordersStatus}}",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders"
							],
							"query": [
								{
									"key": "accountId",
									"value": "{{ordersAccountId}}"
								},
								{
									"key": "status",
									"value": "{{ordersStatus}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOrders_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders GET - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders GET - 400\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders?accountId={{ordersAccountId}}&status={{ordersStatus}}",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders"
							],
							"query": [
								{
									"key": "accountId",
									"value": "{{ordersAccountId}}"
								},
								{
									"key": "status",
									"value": "{{ordersStatus}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOrders_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders GET - 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders GET - 401\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders?accountId={{ordersAccountId}}&status={{ordersStatus}}",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders"
							],
							"query": [
								{
									"key": "accountId",
									"value": "{{ordersAccountId}}"
								},
								{
									"key": "status",
									"value": "{{ordersStatus}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOrders_403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders GET - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders GET - 403\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders?accountId={{ordersAccountId}}&status={{ordersStatus}}",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders"
							],
							"query": [
								{
									"key": "accountId",
									"value": "{{ordersAccountId}}"
								},
								{
									"key": "status",
									"value": "{{ordersStatus}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOrders_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders GET - 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders GET - 404\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders?accountId={{ordersAccountId}}&status={{ordersStatus}}",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders"
							],
							"query": [
								{
									"key": "accountId",
									"value": "{{ordersAccountId}}"
								},
								{
									"key": "status",
									"value": "{{ordersStatus}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOrders_409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders GET - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders GET - 409\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders?accountId={{ordersAccountId}}&status={{ordersStatus}}",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders"
							],
							"query": [
								{
									"key": "accountId",
									"value": "{{ordersAccountId}}"
								},
								{
									"key": "status",
									"value": "{{ordersStatus}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOrders_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders GET - 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders GET - 500\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders?accountId={{ordersAccountId}}&status={{ordersStatus}}",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders"
							],
							"query": [
								{
									"key": "accountId",
									"value": "{{ordersAccountId}}"
								},
								{
									"key": "status",
									"value": "{{ordersStatus}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
									"    \"$ref\": \"#/definitions/Welcome6\",\r",
									"    \"definitions\": {\r",
									"        \"Welcome6\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"accountId\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"userId\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"uuid\"\r",
									"                },\r",
									"                \"created\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                },\r",
									"                \"expiration\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                },\r",
									"                \"status\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"symbol\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"side\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"quantity\": {\r",
									"                    \"type\": \"number\"\r",
									"                },\r",
									"                \"price\": {\r",
									"                    \"type\": \"number\"\r",
									"                },\r",
									"                \"receipt\": {\r",
									"                    \"$ref\": \"#/definitions/Receipt\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"accountId\",\r",
									"                \"created\",\r",
									"                \"expiration\",\r",
									"                \"id\",\r",
									"                \"price\",\r",
									"                \"quantity\",\r",
									"                \"receipt\",\r",
									"                \"side\",\r",
									"                \"status\",\r",
									"                \"symbol\",\r",
									"                \"userId\"\r",
									"            ],\r",
									"            \"title\": \"Welcome6\"\r",
									"        },\r",
									"        \"Receipt\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"subtotal\": {\r",
									"                    \"type\": \"number\"\r",
									"                },\r",
									"                \"fee\": {\r",
									"                    \"type\": \"number\"\r",
									"                },\r",
									"                \"total\": {\r",
									"                    \"type\": \"number\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"fee\",\r",
									"                \"subtotal\",\r",
									"                \"total\"\r",
									"            ],\r",
									"            \"title\": \"Receipt\"\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Order GET - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Order GET - 200\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders/{{orderId}}",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOrder_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Order GET - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Order GET - 400\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders/{{orderId}}",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOrder_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Order GET - 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Order GET - 401\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders/{{orderId}}",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOrder_403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Order GET - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Order GET - 403\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders/{{orderId}}",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOrder_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Order GET - 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Order GET - 404\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders/{{orderId}}",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOrder_409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Order GET - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Order GET - 409\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders/{{orderId}}",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOrder_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Order GET - 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Order GET - 500\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders/{{orderId}}",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOrdersExecute",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
									"    \"$ref\": \"#/definitions/Welcome3\",\r",
									"    \"definitions\": {\r",
									"        \"Welcome3\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"accountId\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"userId\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"uuid\"\r",
									"                },\r",
									"                \"created\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                },\r",
									"                \"expiration\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"format\": \"date-time\"\r",
									"                },\r",
									"                \"status\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"symbol\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"side\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"quantity\": {\r",
									"                    \"type\": \"number\"\r",
									"                },\r",
									"                \"price\": {\r",
									"                    \"type\": \"number\"\r",
									"                },\r",
									"                \"receipt\": {\r",
									"                    \"$ref\": \"#/definitions/Receipt\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"accountId\",\r",
									"                \"created\",\r",
									"                \"expiration\",\r",
									"                \"id\",\r",
									"                \"price\",\r",
									"                \"quantity\",\r",
									"                \"receipt\",\r",
									"                \"side\",\r",
									"                \"status\",\r",
									"                \"symbol\",\r",
									"                \"userId\"\r",
									"            ],\r",
									"            \"title\": \"Welcome3\"\r",
									"        },\r",
									"        \"Receipt\": {\r",
									"            \"type\": \"object\",\r",
									"            \"additionalProperties\": false,\r",
									"            \"properties\": {\r",
									"                \"subtotal\": {\r",
									"                    \"type\": \"number\"\r",
									"                },\r",
									"                \"fee\": {\r",
									"                    \"type\": \"number\"\r",
									"                },\r",
									"                \"total\": {\r",
									"                    \"type\": \"number\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"fee\",\r",
									"                \"subtotal\",\r",
									"                \"total\"\r",
									"            ],\r",
									"            \"title\": \"Receipt\"\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders Execute POST - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders Execute POST - 201\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountId\": \"6a8e01a8-37f0-40e7-bb4e-2b47f1b2745e\",\r\n    \"userId\": \"673c71f3-0a7a-4f9d-9f0a-c076994f8120\",\r\n    \"userInfo\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders/{{orderIdExecute}}/execute",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders",
								"{{orderIdExecute}}",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOrdersExecute_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders Execute POST - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders Execute POST - 400\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountId\": \"6a8e01a8-37f0-40e7-bb4e-2b47f1b2745e\",\r\n    \"userId\": \"673c71f3-0a7a-4f9d-9f0a-c076994f8120\",\r\n    \"userInfo\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders/{{orderIdExecute}}/execute",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders",
								"{{orderIdExecute}}",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOrdersExecute_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders Execute POST - 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders Execute POST - 401\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountId\": \"6a8e01a8-37f0-40e7-bb4e-2b47f1b2745e\",\r\n    \"userId\": \"673c71f3-0a7a-4f9d-9f0a-c076994f8120\",\r\n    \"userInfo\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders/{{orderIdExecute}}/execute",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders",
								"{{orderIdExecute}}",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOrdersExecute_403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders Execute POST - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders Execute POST - 403\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountId\": \"6a8e01a8-37f0-40e7-bb4e-2b47f1b2745e\",\r\n    \"userId\": \"673c71f3-0a7a-4f9d-9f0a-c076994f8120\",\r\n    \"userInfo\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders/{{orderIdExecute}}/execute",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders",
								"{{orderIdExecute}}",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOrdersExecute_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders Execute POST - 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders Execute POST - 404\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountId\": \"6a8e01a8-37f0-40e7-bb4e-2b47f1b2745e\",\r\n    \"userId\": \"673c71f3-0a7a-4f9d-9f0a-c076994f8120\",\r\n    \"userInfo\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders/{{orderIdExecute}}/execute",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders",
								"{{orderIdExecute}}",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOrdersExecute_409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders Execute POST - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders Execute POST - 409\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountId\": \"6a8e01a8-37f0-40e7-bb4e-2b47f1b2745e\",\r\n    \"userId\": \"673c71f3-0a7a-4f9d-9f0a-c076994f8120\",\r\n    \"userInfo\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders/{{orderIdExecute}}/execute",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders",
								"{{orderIdExecute}}",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOrdersExecute_500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify Status Code: Orders Execute POST - 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response Schema validation: Orders Execute POST - 500\", function () {\r",
									"    var result = tv4.validateResult(responseJson, schema);\r",
									"    if(!(result.valid)){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/font-woff",
								"type": "text"
							},
							{
								"key": "x-institution-id",
								"value": "{{x-institution-id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountId\": \"6a8e01a8-37f0-40e7-bb4e-2b47f1b2745e\",\r\n    \"userId\": \"673c71f3-0a7a-4f9d-9f0a-c076994f8120\",\r\n    \"userInfo\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New York\",\r\n        \"stateProvinceRegion\": \"NY\",\r\n        \"zipCode\": \"10092\",\r\n        \"country\": \"US\",\r\n        \"email\": \"jon-odin+35@example.com\",\r\n        \"phone\": \"+15559876543\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{cpOrdersBaseUrl}}/Orders/{{orderIdExecute}}/execute",
							"host": [
								"{{cpOrdersBaseUrl}}"
							],
							"path": [
								"Orders",
								"{{orderIdExecute}}",
								"execute"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://tbd"
		},
		{
			"key": "relationshipInstitutionId",
			"value": ""
		},
		{
			"key": "cryptoProviderId",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		}
	]
}